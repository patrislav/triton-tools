package bct

type Trybble uint8

var trybbleToIntMap = map[Trybble]int{
	0b101010: -13, // TTT
	0b101000: -12, // TT0
	0b101001: -11, // TT1
	0b100010: -10, // T0T
	0b100000: -9,  // T00
	0b100001: -8,  // T01
	0b100110: -7,  // T1T
	0b100100: -6,  // T10
	0b100101: -5,  // T11
	0b001010: -4,  // 0TT
	0b001000: -3,  // 0T0
	0b001001: -2,  // 0T1
	0b000010: -1,  // 00T
	0b000000: 0,   // 000
	0b000001: 1,   // 001
	0b000110: 2,   // 01T
	0b000100: 3,   // 010
	0b000101: 4,   // 011
	0b011010: 5,   // 1TT
	0b011000: 6,   // 1T0
	0b011001: 7,   // 1T1
	0b010010: 8,   // 10T
	0b010000: 9,   // 100
	0b010001: 10,  // 101
	0b010110: 11,  // 11T
	0b010100: 12,  // 110
	0b010101: 13,  // 111
}

var intToTrybbleMap = map[int]Trybble{
	-13: 0b101010, // TTT
	-12: 0b101000, // TT0
	-11: 0b101001, // TT1
	-10: 0b100010, // T0T
	-9:  0b100000, // T00
	-8:  0b100001, // T01
	-7:  0b100110, // T1T
	-6:  0b100100, // T10
	-5:  0b100101, // T11
	-4:  0b001010, // 0TT
	-3:  0b001000, // 0T0
	-2:  0b001001, // 0T1
	-1:  0b000010, // 00T
	0:   0b000000, // 000
	1:   0b000001, // 001
	2:   0b000110, // 01T
	3:   0b000100, // 010
	4:   0b000101, // 011
	5:   0b011010, // 1TT
	6:   0b011000, // 1T0
	7:   0b011001, // 1T1
	8:   0b010010, // 10T
	9:   0b010000, // 100
	10:  0b010001, // 101
	11:  0b010110, // 11T
	12:  0b010100, // 110
	13:  0b010101, // 111
}

func IntToTrybble(val int) Trybble {
	t, ok := intToTrybbleMap[val]
	if !ok {
		return 0
	}
	return t
}

func (t Trybble) Value() int {
	i, ok := trybbleToIntMap[t]
	if !ok {
		return 0
	}
	return i
}
